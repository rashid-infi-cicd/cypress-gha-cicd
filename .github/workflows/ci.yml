name: End-to-end tests

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
 
jobs:
  cypress-run:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      # Install npm dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        continue-on-error: true
        uses: cypress-io/github-action@v6
        
      # Store screenshots only on failures
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

      # Store videos always, even if tests pass
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

  create-issue-on-failure:
    runs-on: ubuntu-22.04
    needs: cypress-run
    if: ${{ needs.cypress-run.outcome == 'failure' }}
    steps:
      - name: Create GitHub Issue
        uses: actions/github-script@v6
        with:
          script: |
            const title = 'Cypress Test Suite Failure in CI Pipeline';
            const body = `The Cypress test suite in the CI pipeline has failed. 
                          Please investigate the issue.
                          \n\nSee the [workflow run](${github.context.run_url}) for more details.`;
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'CI-failure'],
            });





          

      # - name: Encode Screenshots
      #   run: |
      #     for file in $(find cypress/screenshots -type f); do
      #       echo -n '{"text": "' >> payload.json
      #       echo $(base64 $file) >> payload.json
      #       echo '"},' >> payload.json
      #     done
  
      # - name: Encode Videos
      #   run: |
      #     for file in $(find cypress/videos -type f); do
      #       echo -n '{"text": "' >> payload.json
      #       echo $(base64 $file) >> payload.json
      #       echo '"},' >> payload.json
      #     done

      # - name: Clean Up Payload
      #   run: rm -f payload.json





      # - name: Notify Microsoft Teams
      #   if: always()
      #   run: |
      #     STATUS="Success"
      #     if [ "${{ job.status }}" != "success" ]; then
      #       STATUS="Failure"
      #     fi
      #     curl -H 'Content-Type: application/json' \
      #          -d '{
      #                "text": "Cypress test run for `main` branch has completed.",
      #                "themeColor": "0076D7",
      #                "title": "Cypress Test Results: '"${STATUS}"'",
      #                "sections": [
      #                  {
      #                    "activityTitle": "Test Status: '"${STATUS}"'",
      #                    "activitySubtitle": "Repository: ${{ github.repository }}",
      #                    "activityImage": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
      #                    "facts": [
      #                      {
      #                        "name": "Branch",
      #                        "value": "${{ github.ref }}"
      #                      },
      #                      {
      #                        "name": "Commit",
      #                        "value": "${{ github.sha }}"
      #                      },
      #                      {
      #                        "name": "Workflow",
      #                        "value": "${{ github.workflow }}"
      #                      }
      #                    ],
      #                    "markdown": true
      #                  }
      #                ]
      #              }' \
      #          ${TEAMS_WEBHOOK_URL}
      #    env:
      #      TEAMS_WEBHOOK_URL: ${{ secrets.TEAMS_WEBHOOK_URL }}